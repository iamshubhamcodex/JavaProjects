package testGame;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;

public class Game extends JFrame implements KeyListener {

	private static final long serialVersionUID = 1L;
	private Snake player;
	private Food food;
	private Graphics graphics;

	private JFrame window;

	public static final int width = 30;
	public static final int height = 30;
	public static final int dimension = 20;

	public Game() {
		window = new JFrame("Snake Game");
		
		player = new Snake();
		food = new Food(player);
//		graphics = new Graphics(this);
		
		window.setSize(width * dimension, height * dimension);
		window.setVisible(true);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	public void start() {
		graphics.state = "RUNNING";
	}
	
	public boolean checkWallCollision() {
		if (player.getX() < 0 || player.getX() >= width * dimension || player.getY() < 0
				|| player.getY() >= height * dimension) {
			return true;
		}
		return false;
	}

	public boolean checkFoodCollision() {
		if (player.getX() == food.getX() && player.getY() == food.getY()) {
			return true;
		}
		return false;
	}

	public boolean checkSelfCollision() {
		for (int i = 1; i < player.getBody().size(); i++) {
			if (player.getX() == player.getBody().get(i).x && player.getY() == player.getBody().get(i).y) {
				return true;
			}
		}
		return false;
	}

	@Override
	public void keyTyped(KeyEvent e) {
	}

	@Override
	public void keyPressed(KeyEvent e) {
		int keyCode = e.getKeyCode();

		if (keyCode == KeyEvent.VK_W) {
			player.up();
		} else if (keyCode == KeyEvent.VK_S) {
			player.down();
		} else if (keyCode == KeyEvent.VK_A) {
			player.left();
		} else {
			player.right();
		}
	}

	@Override
	public void keyReleased(KeyEvent e) {
	}

	public Snake getPlayer() {
		return player;
	}

	public Food getFood() {
		return food;
	}

}
